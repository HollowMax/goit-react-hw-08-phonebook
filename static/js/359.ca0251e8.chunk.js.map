{"version":3,"file":"static/js/359.ca0251e8.chunk.js","mappings":"6OAIaA,GAAkBC,EAAAA,EAAAA,IAAO,MAAPA,CAAH,iHAQfC,GAAcD,EAAAA,EAAAA,IAAO,IAAPA,CAAH,kHAQXE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,qHAQVI,EAAYJ,EAAAA,GAAAA,MAAH,4CAITK,GAAcL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,+OAkBXO,EAAYP,EAAAA,GAAAA,OAAH,wUAuBTQ,GAAWR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,+b,sCC3DN,SAASU,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OADcC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,KAAf,KAEtB,SAAC,KAAD,CAAUC,GAAG,YAAYC,SAAO,KAGvC,UAACnB,EAAD,YACE,SAACE,EAAD,uBACA,SAAC,KAAD,CACEkB,cAAe,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,IAChDC,SAAU,SAAAC,GACRb,GAASc,EAAAA,EAAAA,IAAQD,GAClB,EAJH,SAMG,cAAGE,YAAH,EAAgBC,OAAhB,OACC,UAACzB,EAAD,YACE,SAACE,EAAD,CAAWwB,QAAQ,WAAnB,mBACA,SAACvB,EAAD,CAAawB,KAAK,OAAOC,GAAG,WAAWV,KAAK,OAAOW,UAAQ,KAC3D,SAAC3B,EAAD,CAAWwB,QAAQ,cAAnB,oBACA,SAACvB,EAAD,CAAawB,KAAK,QAAQC,GAAG,cAAcV,KAAK,QAAQW,UAAQ,EAACC,aAAa,WAE9E,SAAC5B,EAAD,CAAWwB,QAAQ,iBAAnB,uBACA,SAACvB,EAAD,CACEwB,KAAK,WACLC,GAAG,iBACHV,KAAK,WACLW,UAAQ,EACRC,aAAa,sBAEf,SAACzB,EAAD,CAAWsB,KAAK,SAAhB,sBACA,SAACrB,EAAD,CAAUS,GAAG,SAAb,sBAhBH,MAsBR,C","sources":["Pages/SignUp/SingUp.styled.js","Pages/SignUp/SignUp.jsx"],"sourcesContent":["import { Form, Field } from 'formik';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const CustomContainer = styled('div')`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n\n  transform: translate(-50%, -60%);\n`;\n\nexport const CustomTitle = styled('p')`\n  font-size: 30px;\n  font-weight: 600;\n  text-align: center;\n\n  margin-bottom: 50px;\n`;\n\nexport const CustomForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  width: 500px;\n  margin: auto;\n  gap: 10px;\n`;\n\nexport const FormLabel = styled.label`\n  font-size: 26px;\n`;\n\nexport const CustomInput = styled(Field)`\n  width: 100%;\n  height: 30px;\n\n  font-size: 22px;\n\n  border: none;\n  border-radius: 6px;\n\n  outline: 1px solid lightblue;\n\n  &:focus {\n    outline: none;\n\n    box-shadow: 0px 0px 25px lightblue;\n  }\n`;\n\nexport const SignUpBtn = styled.button`\n  width: 200px;\n  height: 50px;\n\n  font-size: 20px;\n\n  border: 1px solid #777;\n  border-radius: 8px;\n  margin: 30px auto 0;\n\n  background-color: transparent;\n\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0px 0px 25px lightblue;\n  }\n\n  &:active {\n    background-color: #d6ffff;\n  }\n`;\n\nexport const LogInBtn = styled(NavLink)`\n  width: 200px;\n  height: 50px;\n\n  font-size: 20px;\n  text-decoration: none;\n  color: black;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  border: 1px solid #777;\n  border-radius: 8px;\n  margin: 30px auto 0;\n\n  background-color: rgb(232, 240, 254);\n\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0px 0px 25px lightblue;\n  }\n\n  &:active {\n    background-color: #fff;\n  }\n`;\n","import { Formik } from 'formik';\nimport {\n  CustomContainer,\n  CustomTitle,\n  CustomForm,\n  FormLabel,\n  CustomInput,\n  SignUpBtn,\n  LogInBtn,\n} from './SingUp.styled';\nimport { addUser } from 'redux/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nexport default function SignUp() {\n  const dispatch = useDispatch();\n  const token = useSelector(state => state.user.token);\n  if (token) {\n    return <Navigate to=\"/contacts\" replace />;\n  }\n  return (\n    <CustomContainer>\n      <CustomTitle>Sign up</CustomTitle>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        onSubmit={data => {\n          dispatch(addUser(data));\n        }}\n      >\n        {({ isSubmiting, values }) => (\n          <CustomForm>\n            <FormLabel htmlFor=\"UserName\">Name</FormLabel>\n            <CustomInput type=\"name\" id=\"UserName\" name=\"name\" required />\n            <FormLabel htmlFor=\"SignUpEmail\">Email</FormLabel>\n            <CustomInput type=\"email\" id=\"SignUpEmail\" name=\"email\" required autoComplete=\"email\" />\n\n            <FormLabel htmlFor=\"SignUpPassword\">Password</FormLabel>\n            <CustomInput\n              type=\"password\"\n              id=\"SignUpPassword\"\n              name=\"password\"\n              required\n              autoComplete=\"current-password\"\n            />\n            <SignUpBtn type=\"submit\">Sing Up</SignUpBtn>\n            <LogInBtn to=\"/login\">Log In</LogInBtn>\n          </CustomForm>\n        )}\n      </Formik>\n    </CustomContainer>\n  );\n}\n"],"names":["CustomContainer","styled","CustomTitle","CustomForm","Form","FormLabel","CustomInput","Field","SignUpBtn","LogInBtn","NavLink","SignUp","dispatch","useDispatch","useSelector","state","user","token","to","replace","initialValues","name","email","password","onSubmit","data","addUser","isSubmiting","values","htmlFor","type","id","required","autoComplete"],"sourceRoot":""}